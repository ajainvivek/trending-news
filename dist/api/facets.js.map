{"version":3,"sources":["../../src/api/facets.js"],"names":["config","db","id","fetchTrendData","res","Twit","require","twit","consumer_key","consumer_secret","app_only_auth","get","err","data","response","console","log","trends","query","json","load","req","callback","facet","find","index","params","create","body","length","toString","push","read","update","key","sendStatus","delete","splice","indexOf"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;;;kBAEe;AAAA,KAAGA,MAAH,QAAGA,MAAH;AAAA,KAAWC,EAAX,QAAWA,EAAX;AAAA,QAAoB,wCAAS;;AAE3C;AACAC,MAAK,OAHsC;;AAK3CC,gBAL2C,iCAKxBC,GALwB,EAKpB;AAAA;;AACtB,OAAIC,OAAOC,QAAQ,MAAR,CAAX;;AAEA,OAAIC,OAAO,IAAIF,IAAJ,CAAS;AACnBG,kBAAsB,2BADH;AAEnBC,qBAAsB,oDAFH;AAGnBC,mBAAsB;AACtB;AACA;AALmB,IAAT,CAAX;;AAQAH,QAAKI,GAAL,CAAS,cAAT,EAAyB,EAAET,IAAI,OAAN,EAAzB,EAAyC,UAASU,GAAT,EAAcC,IAAd,EAAoBC,QAApB,EAA8B;;AAEtEC,YAAQC,GAAR,CAAYH,KAAKA,IAAL,CAAU,CAAV,EAAaI,MAAb,CAAoB,CAApB,EAAuBC,KAAnC;AACAd,QAAIe,IAAJ,CAASN,KAAKA,IAAL,CAAU,CAAV,EAAaI,MAAb,CAAoB,CAApB,EAAuBC,KAAhC;AACA,IAJD;AAKA,GArB0C;;;AAuB3C;;;AAGAE,MA1B2C,gBA0BtCC,GA1BsC,EA0BjCnB,EA1BiC,EA0B7BoB,QA1B6B,EA0BnB;AACvB,OAAIC,QAAQ,iBAAOC,IAAP,CAAa;AAAA,WAASD,MAAMrB,EAAN,KAAWA,EAApB;AAAA,IAAb,CAAZ;AAAA,OACCU,MAAMW,QAAQ,IAAR,GAAe,WADtB;AAEAD,YAASV,GAAT,EAAcW,KAAd;AACA,GA9B0C;;;AAgC3C;AACAE,OAjC2C,wBAiCzBrB,GAjCyB,EAiCpB;AAAA,OAAfsB,MAAe,SAAfA,MAAe;;AACtBtB,OAAIe,IAAJ;AACA,GAnC0C;;;AAqC3C;AACAQ,QAtC2C,yBAsC1BvB,GAtC0B,EAsCrB;AAAA,OAAbwB,IAAa,SAAbA,IAAa;;AACrBA,QAAK1B,EAAL,GAAU,iBAAO2B,MAAP,CAAcC,QAAd,CAAuB,EAAvB,CAAV;AACA,oBAAOC,IAAP,CAAYH,IAAZ;AACAxB,OAAIe,IAAJ,CAASS,IAAT;AACA,GA1C0C;;;AA4C3C;AACAI,MA7C2C,uBA6C3B5B,GA7C2B,EA6CtB;AAAA,OAAdmB,KAAc,SAAdA,KAAc;;AACpBnB,OAAIe,IAAJ,CAASI,KAAT;AACA,GA/C0C;;;AAiD3C;AACAU,QAlD2C,yBAkDnB7B,GAlDmB,EAkDd;AAAA,OAApBmB,KAAoB,SAApBA,KAAoB;AAAA,OAAbK,IAAa,SAAbA,IAAa;;AAC5B,QAAK,IAAIM,GAAT,IAAgBN,IAAhB,EAAsB;AACrB,QAAIM,QAAM,IAAV,EAAgB;AACfX,WAAMW,GAAN,IAAaN,KAAKM,GAAL,CAAb;AACA;AACD;AACD9B,OAAI+B,UAAJ,CAAe,GAAf;AACA,GAzD0C;;;AA2D3C;AACAC,QA5D2C,0BA4DzBhC,GA5DyB,EA4DpB;AAAA,OAAdmB,KAAc,SAAdA,KAAc;;AACtB,oBAAOc,MAAP,CAAc,iBAAOC,OAAP,CAAef,KAAf,CAAd,EAAqC,CAArC;AACAnB,OAAI+B,UAAJ,CAAe,GAAf;AACA;AA/D0C,EAAT,CAApB;AAAA,C","file":"facets.js","sourcesContent":["import resource from 'resource-router-middleware';\nimport facets from '../models/facets';\n\nexport default ({ config, db }) => resource({\n\n\t/** Property name to store preloaded entity on `request`. */\n\tid : 'facet',\n\n\tfetchTrendData({}, res){\n\t\tvar Twit = require('twit');\n\n\t\tvar twit = new Twit({\n\t\t\tconsumer_key:         'w7jh87GEfzuy3kMC2rFR4vaYy',\n\t\t\tconsumer_secret:      'ZMQgtVKvWJWszLP8dvXdfHMcaBxYiJwiajfemEqKtD2ABxvrcp',\n\t\t\tapp_only_auth:        true,\n\t\t\t// access_token:         '...',\n\t\t\t// access_token_secret:  '...'\n\t\t});\n\n\t\ttwit.get('trends/place', { id: 1105779}, function(err, data, response) {\n\n\t\t\tconsole.log(data.data[0].trends[0].query);\n\t\t\tres.json(data.data[0].trends[0].query);\n\t\t})\n\t},\n\n\t/** For requests with an `id`, you can auto-load the entity.\n\t *  Errors terminate the request, success sets `req[id] = data`.\n\t */\n\tload(req, id, callback) {\n\t\tlet facet = facets.find( facet => facet.id===id ),\n\t\t\terr = facet ? null : 'Not found';\n\t\tcallback(err, facet);\n\t},\n\n\t/** GET / - List all entities */\n\tindex({ params }, res) {\n\t\tres.json(facets);\n\t},\n\n\t/** POST / - Create a new entity */\n\tcreate({ body }, res) {\n\t\tbody.id = facets.length.toString(36);\n\t\tfacets.push(body);\n\t\tres.json(body);\n\t},\n\n\t/** GET /:id - Return a given entity */\n\tread({ facet }, res) {\n\t\tres.json(facet);\n\t},\n\n\t/** PUT /:id - Update a given entity */\n\tupdate({ facet, body }, res) {\n\t\tfor (let key in body) {\n\t\t\tif (key!=='id') {\n\t\t\t\tfacet[key] = body[key];\n\t\t\t}\n\t\t}\n\t\tres.sendStatus(204);\n\t},\n\n\t/** DELETE /:id - Delete a given entity */\n\tdelete({ facet }, res) {\n\t\tfacets.splice(facets.indexOf(facet), 1);\n\t\tres.sendStatus(204);\n\t}\n});\n"]}